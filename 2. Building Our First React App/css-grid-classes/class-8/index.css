.grid {
  display: grid;
  gap: 10px;
  grid-template: 100px 100px 100px / repeat(auto-fit, minmax(100px, 1fr));
  /*fr = fração perfeita do espaço restante*/
}

/*

grid-template: 100px 100px 100px / repeat(auto-fill, minmax(100px, auto));



grid-template: 100px 100px 100px / repeat(auto-fill, minmax(100px, 200px));
Auto-fill will always prefer maxsize.

  grid-template: 100px / repeat(6, minmax(100px, 1fr));

.grid div:nth-child(1) {
  grid-column: auto/ span 24;
}
.grid div:nth-child(2) {
  grid-column: 1 / span 12;
}
.grid div:nth-child(3) {
  grid-column: auto / span 6;
}
.grid div:nth-child(4) {
  grid-column: auto / span 6;
}
.grid div:nth-child(5) {
  grid-column: auto / span 12;
}
.grid div:nth-child(6) {
  grid-column: auto / span 12;
}

  grid-template-areas:
    "e e a"
    "b c a"
    "b d f";

.grid div:nth-child(1) {
  grid-row: auto/ span 2;
}

.grid div:nth-child(2) {
  grid-area: 2 / 1/ 4 /2;
  /* top/right/botton/left*/
/*
   (grid-area: 2 / 1/ 4 /2) === (grid-row: 2/ 4;  grid-column: 1 / 2;)
   grid-area
  
  
  
}

.grid div:nth-child(5) {
  grid-row: 1 / 2;
  grid-column: 1/3;
}

.grid div:nth-child(1) {
  grid-row: auto / span 2; /* sempre ocupa 2 linhas
}

.grid div:nth-child(2) {
  grid-row-start: 2;
  grid-row-end: 4;
  grid-column-start: 1;
  grid-column-end: 2;
}

.grid div:nth-child(5) {
  grid-row: 1 / 2;
  grid-column: 1 / 3;
}






/*
  <body>
    <h2>Learn CSS grids in 2017 kkk</h2>
    <p>this is the template you can use to follow along the course</p>
    <div class="grid">
      <div>nav</div>
      <div>right bar</div>
      <div>content 1</div>
      <div>content 2</div>
    </div>
  </body>

//CSS
  .grid {
  display: grid;
  grid-template: 100px 100px / 300px auto;
}

.grid div:nth-child(1) {
  grid-column: 1 / 3;
}

.grid div:nth-child(2) {
  grid-row: 2 /4;
}

*/
